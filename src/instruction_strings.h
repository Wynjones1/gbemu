#pragma once

const char *instruction_strings[] = {
    "NOP",
    "LD BC d16",
    "LD (BC) A",
    "INC BC",
    "INC B",
    "DEC B",
    "LD B n",
    "RLCA",
    "LD (d16) SP",
    "ADD BC ss",
    "LD A (BC)",
    "DEC BC",
    "INC C",
    "DEC C",
    "LD C n",
    "RRCA",
    "STOP",
    "LD DE d16",
    "LD  (DE) A",
    "INC DE",
    "INC D",
    "DEC D",
    "LD D n",
    "RLA",
    "JR r8",
    "ADD DE ss",
    "LD A (DE)",
    "DEC DE",
    "INC E",
    "DEC E",
    "LD E n",
    "RRA",
    "JR NZ r8",
    "LD HL d16",
    "LD (HL++) A",
    "INC HL",
    "INC H",
    "DEC H",
    "LD H n",
    "DDA",
    "JR Z r8",
    "ADD HL ss",
    "LD A (HL++)",
    "DEC HL",
    "INC L",
    "DEC L",
    "LD L n",
    "CPL",
    "JR NC r8",
    "LD SP d16",
    "LD (HL--)  A",
    "INC SP",
    "INC (HL)",
    "DEC (HL)",
    "LD (HL) d8",
    "SCF",
    "JR C r8",
    "ADD SP ss",
    "LD A (HL--)",
    "DEC SP",
    "INC A",
    "DEC A",
    "LD A n",
    "CCF",
    "LD B B",
    "LD B C",
    "LD B D",
    "LD B E",
    "LD B H",
    "LD B L",
    "LD B (HL)",
    "LD B A",
    "LD C B",
    "LD C C",
    "LD C D",
    "LD C E",
    "LD C H",
    "LD C L",
    "LD C (HL)",
    "LD C A",
    "LD D B",
    "LD D C",
    "LD D D",
    "LD D E",
    "LD D H",
    "LD D L",
    "LD D (HL)",
    "LD D A",
    "LD E B",
    "LD E C",
    "LD E D",
    "LD E E",
    "LD E H",
    "LD E L",
    "LD E (HL)",
    "LD E A",
    "LD H B",
    "LD H C",
    "LD H D",
    "LD H E",
    "LD H H",
    "LD H L",
    "LD H (HL)",
    "LD H A",
    "LD L B",
    "LD L C",
    "LD L D",
    "LD L E",
    "LD L H",
    "LD L L",
    "LD L (HL)",
    "LD L A",
    "LD (HL) B",
    "LD (HL) C",
    "LD (HL) D",
    "LD (HL) E",
    "LD (HL) H",
    "LD (HL) L",
    "HALT",
    "LD (HL) A",
    "LD A B",
    "LD A C",
    "LD A D",
    "LD A E",
    "LD A H",
    "LD A L",
    "LD A (HL)",
    "LD A A",
    "ADD A B",
    "ADD A C",
    "ADD A D",
    "ADD A E",
    "ADD A H",
    "ADD A L",
    "ADD A (HL)",
    "ADD A A",
    "ADC A B",
    "ADC A C",
    "ADC A D",
    "ADC A E",
    "ADC A H",
    "ADC A L",
    "ADC A (HL)",
    "ADC A A",
    "SUB A B",
    "SUB A C",
    "SUB A D",
    "SUB A E",
    "SUB A H",
    "SUB A L",
    "SUB A (HL)",
    "SUB A A",
    "SBC A B",
    "SBC A C",
    "SBC A D",
    "SBC A E",
    "SBC A H",
    "SBC A L",
    "SBC A (HL)",
    "SBC A A",
    "AND A B",
    "AND A C",
    "AND A D",
    "AND A E",
    "AND A H",
    "AND A L",
    "AND A (HL)",
    "AND A A",
    "XOR A B",
    "XOR A C",
    "XOR A D",
    "XOR A E",
    "XOR A H",
    "XOR A L",
    "XOR A (HL)",
    "XOR A A",
    "OR A B",
    "OR A C",
    "OR A D",
    "OR A E",
    "OR A H",
    "OR A L",
    "OR A (HL)",
    "OR A A",
    "CP A B",
    "CP A C",
    "CP A D",
    "CP A E",
    "CP A H",
    "CP A L",
    "CP A (HL)",
    "CP A A",
    "RET NZ",
    "POP BC",
    "JP NZ d16",
    "JP d16",
    "CALL NZ d16",
    "PUSH BC",
    "ADD A n",
    "RST 00H",
    "RET Z",
    "RET",
    "JP Z d16",
    "CB",
    "CALL Z d16",
    "CALL d16",
    "ADC A n",
    "RST 08H",
    "RET NC",
    "POP DE",
    "JP NC d16",
    "INVALID",
    "CALL NC d16",
    "PUSH DE",
    "SUB A n",
    "RST 10H",
    "RET C",
    "RETI",
    "JP C d16",
    "INVALID",
    "CALL C d16",
    "INVALID",
    "SBC A n",
    "RST 18H",
    "LDH (d8) A",
    "POP HL",
    "LD (C) A",
    "INVALID",
    "INVALID",
    "PUSH HL",
    "AND A n",
    "RST 20H",
    "ADD SP r8",
    "JP PC (HL)",
    "LD (d16) A",
    "INVALID",
    "INVALID",
    "INVALID",
    "XOR A n",
    "RST 28H",
    "LDH A (d8)",
    "POP AF",
    "LD A (C)",
    "DI",
    "INVALID",
    "PUSH AF",
    "OR A n",
    "RST 30H",
    "LD HL SP + r8",
    "LD SP HL",
    "LD A (d16)",
    "EI",
    "INVALID",
    "INVALID",
    "CP A n",
    "RST 48H",
};
