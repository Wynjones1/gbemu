==26373== Memcheck, a memory error detector
==26373== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==26373== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==26373== Command: ./bin/gbemu
==26373== 
==26373== Syscall param read(buf) points to unaddressable byte(s)
==26373==    at 0x5228720: __read_nocancel (syscall-template.S:81)
==26373==    by 0x51B6208: _IO_file_xsgetn (fileops.c:1438)
==26373==    by 0x51AB78E: fread (iofread.c:42)
==26373==    by 0x4023DF: memory_init (memory.c:47)
==26373==    by 0x402947: cpu_init (cpu.c:22)
==26373==    by 0x402295: main (main.c:12)
==26373==  Address 0xa819634 is 0 bytes after a block of size 4 alloc'd
==26373==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26373==    by 0x40237D: memory_init (memory.c:43)
==26373==    by 0x402947: cpu_init (cpu.c:22)
==26373==    by 0x402295: main (main.c:12)
==26373== 
--26373-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting
--26373-- si_code=1;  Faulting address: 0xF4636BAE;  sp: 0x802b99dd0

valgrind: the 'impossible' happened:
   Killed by fatal signal
==26373==    at 0x3805CF06: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==26373==    by 0x380216D4: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==26373==    by 0x380218A2: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==26373==    by 0x3809DC03: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==26373==    by 0x380AC87C: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable
==26373==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26373==    by 0x51AB29C: __fopen_internal (iofopen.c:73)
==26373==    by 0x40290F: memory_load_rom (memory.c:188)
==26373==    by 0x402A51: cpu_load_rom (cpu.c:66)
==26373==    by 0x4022AA: main (main.c:16)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

